DEBUG主要命令详解 

  DEBUG是为汇编语言设计的一种高度工具，它通过单步、设置断点等方式为汇编语言程序员提供了非常有效的调试手段。 
一、DEBUG程序的调用 
在DOS的提示符下，可键入命令： 
C:\DEBUG [D:][PATH][FILENAME[.EXT>[PARM1][PARM2] 
其中，文件名是被调试文件的名字。如用户键入文件，则DEBUG将指定的文件装入存储器中，用户可对其进行调试。如果未键入文件名，则用户可以用当前存储器的内容工作，或者用DEBUG命令N和L把需要的文件装入存储器后再进行调试。命令中的D指定驱动器PATH为路径，PARM1和PARM2则为运行被调试文件时所需要的命令参数。 

 
  在DEBUG程序调入后，将出现提示符，此时就可用DEBUG命令来调试程序。 
Debug: D（dump转储） 
显示一定范围内存地址的内容。 
d [range] 
参数 
range 
指定要显示其内容的内存区域的起始和结束地址，或起始地址和长度。如果不指定 range，Debug 程序将从以前 d 
命令中所指定的地址范围的末尾开始显示 128 个字节的内容。 
有关显示寄存器内容的信息，请参看Debug R（寄存器）。 
说明 
当使用 d 命令时，Debug 以两个部分显示内存内容：十六进制部分（每个字节的值都用十六进制格式表示）和 ASCII 
码部分（每个字节的值都用 ASCII 码字符表示）。每个非打印字符在显示的 ASCII 部分由句号 (.) 表示。每个显示行显示 16 
字节的内容，第 8 字节和第 9 字节之间有一个连字符。每个显示行从 16 字节的边界上开始。 
范例 
假定键入以下命令： 
c:\windows\command> debug(回车) 
-d cs:100 10f （在短横线命令提示符输入前面内容） 
Debug 按以下格式显示范围中的内容： 
04BA:0100 54 4F 4D 00 53 41 57 59-45 52 00 00 00 00 00 00 
TOM.SAWYER...... 
如果在没有参数的情况下键入 d 命令，Debug 按以前范例中所描述的内容来编排显示格式。显示的每行以比前一行的地址大 16 
个字节（如果是显示 40 列的屏幕，则为 8 个字节）的地址开头。 
对于后面键入的每个不带参数的 d 命令，Debug 将紧接在最后显示的命令后立即显示字节内容。 
如果键入以下命令，Debug 将从 CS:100 开始显示 20h 个字节的内容： 
d cs:100 l20 (l就是length的简写) 
如果键入以下命令，Debug 将显示范围从 CS 段的 100h 到 115h 中所有字节的内容： 
d cs:100 115 
Debug: E（键入） 
将数据输入到内存中指定的地址。 
可以按十六进制或 ASCII 格式键入数据。以前存储在指定位置的任何数据全部丢失。 
e address [list] 
参数 
address 
指定输入数据的第一个内存位置。 
list 
指定要输入到内存的连续字节中的数据。 
有关集成记忆码的信息，请参看Debug A（汇编）。 
有关显示内存部分内容的信息，请参看Debug D （转储）。 
说明 
使用 address 参数 
如果在没有指定可选的 list 参数的值情况下指定 address 的值，Debug 
将显示地址和内容，在下一行重复地址，并等待您的输入。此时，您可以执行下列操作之一： 
替换字节值。为此，请在当前值后键入新值。如果您键入的值不是有效的十六进制值，或该值包含两个以上的数字，则 Debug 
不会回显无效或额外的字符。 
进入下一个字节。为此，请按 SPACEBAR（空格键）。要更改该字节中的值，请在当前值后键入新值。如果按 
SPACEBAR（空格键）时，移动超过了 8 位界限，Debug 程序将显示新的一行并在行首显示新地址。 
返回到前一个字节。为此，请按 HYPHEN 键 (-)。可以反复按 HYPHEN 键 (-) 向后移动超过多个字节。在按 HYPHEN 
时，Debug 开始新行并显示当前地址和字节值。 
停止执行 e 命令。为此，请按 ENTER 键。在任何字节位置都可以按 ENTER。 
使用 list 参数 
如果指定 list 参数的值，随后的 e 命令将使用列表中的值替换现有的字节值。如果发生错误，将不更改任何字节值。 
List 值可以是十六进制字节或字符串。使用空格、逗号或制表符来分隔值。必须将字符串包括在单或双引号中。 
范例 
假定键入以下命令： 
e cs:100 
Debug 按下面的格式显示第一个字节的内容： 
04BA:0100 EB. 
要将该值更改为 41，请在插入点键入 41，如下所示： 
04BA:0100 EB.41_ 
可以用一个 e 命令键入连续的字节值。在键入新值后按 SPACEBAR（空格键），而不是按 ENTER 键。Debug 
显示下一个值。在此范例中，如果按三次 SPACEBAR（空格键），Debug 将显示下面的值： 
04BA:0100 EB.41 10. 00. BC._ 
要将十六进制值 BC 更改为 42，请在插入点键入 42，如下所示： 
04BA:0100 EB.41 10. 00. BC.42_ 
假定决定值 10 应该是 6F。要纠正该值，请按 HYPHEN 键两次以返回到地址 0101（值 10）。Debug 显示以下内容： 
04BA:0100 EB.41 10. 00. BC.42- 
04BA:0102 00.- 
04BA:0101 10._ 
在插入点键入 6f 更改值，如下所示： 
04BA:0101 10.6f_ 
按 ENTER 停止 e 命令并返回到 Debug 提示符下。 
以下是字符串项的范例： 
e ds:100 "This is the text example" 
该字符串将从 DS:100 开始填充 24 个字节 
·填写命令F(FILL) 
其格式为： -F range list 
例如：-F 4BA:0100 5 F3XYZ8D 
使04BA：0100~0104单元包含指定的五个字节的内容。如果list中的字节数超过指定的范围，则忽略超过的项；如果list的字节数小于指定的范围，则重复使用list填入，直到填满指定的所有单元为止。 

 
  检查和修改寄存器内容的命令R(register) 
它有三种格式如下： 
·显示CPU内所有寄存器内容和标志位状态，其格式为： 
-R 
例如，-r 
AX=0000 BX=0000 CX=010A DX=0000 SP=FFFE BP=0000 SI=0000 DI=0000 
DS=18E4 ES=18E4 SS=18E4 CS=18E4 IP=0100 NV UP DI PL NZ NA PO NC 
18E4:0100 C70604023801 MOV WORD PTR [0204],0138 DS:0204=0000 
·显示和修改某个寄存器内容，其格式为： 
-R register name 
例如，键入 
-R AX 
系统将响应如下： 
AX F1F4 
： 
即AX寄存器的当前内容为F1F4，如不修改则按ENTER键，否则，可键入欲修改的内容，如： 

  -R bx 
BX 0369 
：059F 
则把BX寄存器的内容修改为059F。 
显示和修改标志位状态 
命令格式为： 
-RF 系统将响应，如： 
OV DN EI NG ZR AC PE CY- 
此时，如不修改其内容可按ENTER键，否则，可键入欲修改的内容，如： 
OV DN EI NG ZR AC PE CY-PONZDINV 
即可，可见键入的顺序可以是任意的。 
运行命令G 
其格式为： 
-G[=address1][address2[address3…> 
其中，地址1指定了运行的起始地址，如不指定则从当前的CS：IP开始运行。后面的地址均为断点地址，当指令执行到断点时，就停止执行并显示当前所有寄存器及标志位的内容，和下一条将要执行的指令。 

 
  跟踪命令T(Trace) 
有两种格式： 
·逐条指令跟踪 
-T [=address] 
从指定地址起执行一条指令后停下来，显示所有寄存器内容及标志位的值。如未指定地址则从当前的CS：IP开始执行。 
·多条指令跟踪 
-T [=address][value] 
从指定地址起执行n条指令后停下来，n由value指定。 
汇编命令A(Assemble) 
其格式为： 
-A[address] 
该命令允许键入汇编语言语句，并能把它们汇编成机器代码，相继地存放在从指定地址开始的存储区中。必须注意：DEBUG把键入的数字均看成十六进制数，所以如要键入十进制数，则其后应加以说明，如100D。 

 
  反汇编命令U(Unassemble) 
有两种格式。 
·从指定地址开始，反汇编32个字节，其格式为： 
-U[address] 
例如： 
-u100 
18E4:0100 C70604023801 MOV WORD PTR[0204],0138 
18E4:0106 C70606020002 MOV WORD PTR[0206],0200 
18E4:010C C70606020202 MOV WORD PTR[0208],0202 
18E4:0112 BBO4O2 MOV BX,0204 
18E4:0115 E80200 CALL 011A 
18E4:0118 CD20 INT 20 
18E4:011A 50 PUSH AX 
18E4:011B 51 PUSH CX 
18E4:011C 56 PUSH SI 
18E4:011D 57 PUSH DI 
18E4:011E 8B37 MOV SI,[BX] 
如果地址被省略，则从上一个U命令的最后一条指令的下一个单元开始显示32个字节。 
·对指定范围内的存储单元进行反汇编，格式为： 
-U[range] 
例如： 
-u100 10c 
18E4:0100 C70604023801 MOV WORD PTR[0204],0138 
18E4:0106 C70606020002 MOV WORD PTR[0206],0200 
18E4:010C C70606020202 MOV WORD PTR[0208],0202 
或 
-u100 112 
18E4:0100 C70604023801 MOV WORD PTR[0204],0138 
18E4:0106 C70606020002 MOV WORD PTR[0206],0200 
18E4:010C C70606020202 MOV WORD PTR[0208],0202 

  可见这两种格式是等效的 
命名命令N(Name) 
其格式为： 
-N filespecs [filespecs] 
命令把两个文件标识符格式化在CS：5CH和CS：6CH的两个文件控制块中，以便在其后用L或W命令把文件装入存盘。filespecs的格式可以是： 

  [d:][path] filename[.ext] 
例如， 
-N myprog 
-L 
- 
可把文件myprog装入存储器。 
装入命令(Load) 
有两种功能。 
·把磁盘上指定扇区范围的内容装入到存储器从指定地址开始的区域中。其格式为： 
-L[address[drive sector sector] 
·装入指定文件，其格式为： 
-L[address] 
此命令装入已在CS：5CH中格式化了文件控制块所指定的文件。如未指定地址，则装入CS：0100开始的存储区中。 
写命令W(Write) 
有两种功能。 
·把数据写入磁盘的指定扇区。其格式为： 
-W address drive sector sector 
·把数据写入指定的文件中。其格式为： 
-W[address] 
此命令把指定的存储区中的数据写入由CS：5CH处的文件控制块所指定的文件中。如未指定地址则数据从CS：0100开始。要写入文件的字节数应先放入BX和CX中。 

  退出DEBUG命令Q(Quit) 
其格式为： 
-Q 
它退出DEBUG，返回DOS。本命令并无存盘功能，如需存盘应先使用W命令。 

  问题:初学者问一个低级问题,执行debug -a 后,如果有一行输入错误,如何更改这一行? 

  回答: 
加入进行如下输入： 
C:\windows>debug 
-a 
2129:0100 mov ax,200 
2129:0103 mov bx,200 
2129:0106 mov cx,200 
2129:0109 
此时，发现mov bx,200一句错误，应为mov bx,20，可以敲回车返回"-"状态，然后输入： 
-a103 
2129:0103 mov bx,20 
如果多或者少若干行，不必重新输入，可以用M命令移动后面的程序来去掉或者增加程序空间。 
Debug实战 
1.查看主板的生产日期，版本 
C：\windows>debug（回车） 
-D ffff:05 
-D fe00:0e 

  2.模拟Rest键功能 (只是适合纯DOS环境) 
C：\windows>debug（回车） 
-A 
CS:100 jmp ffff:0000 
CS:105 直接回车 
-g 

  3.快速格式化软盘 
C：\windows>debug（回车） 
-L 100 0 0 * 插入一张己格式化软盘 
-W 100 0 0 * 放入一张欲格式化软盘 
注：* 分别为:720K e |1.2M id |1.44M 21 
4.硬盘格式化两种方法 
C：\windows>debug（回车） 
-G=c800:05 （第一种方法） 
-A 100 （第二种方法） 
cs:100 mov ax,0703 （回车） 
省略 mov cx,0001 （回车） 
省略 mov dx,0080 （回车） 
省略 int 13 （回车） 
省略 int 3 （回车） 
-g 100 （回车） 
5.加速键盘 
C：\windows>debug（回车） 
-A 
mov ax,0305 
mov bx,0000 
int 16 
int 20 
rcx 
10 
n fast.com 
w 
q 

  6.关闭显示器（恢复时，按任意键） 
C：\windows>debug（回车） 
-A 
mov ax,1201 
mov bl,36 
int 10 
mov ah,0 
int 16 
mov ax,1200 
int 10 
rcx 
10 
n crt-of.com 
w 
q 
7.硬盘DOS引导记录的修复 
在软驱中放入一张己格式化软盘 
debug （回车） 
-l 100 2 0 1 
-w 100 0 50 1 
把软盘放入故障机软驱中 
debug （回车） 
-l 100 0 50 1 
-w 100 2 0 1 
-q 
8.清coms中setup口令 
debug （回车） 
-a 
mov bx,0038 
mov cx,0000 
mov ax,bx 
out 70,al 
inc cx 
cmp cx,0006 
jnz 0106 
int 20 
-rcx 
:20 
-n clearpassword.com 
-w 
-q 
注：以上适合super与dtk机，对于ast机，因为他的口令放在coms的4ch-51h地址处，只要将：mov 
bx,0038 改为： mov bx,004c即可 
9.取消coms的密码(将coms数据清为初始化） 
-o 70,10 
-o 71,10 
-g 
-q 
10.将硬盘主引导记录保存到文件中 

  debug 
-a 
mov ax,0201 
mov bx,0200 
mov cx,0001 
mov dx,0080 
mov int 13 
int 3 
-rcx 
:200 
-nboot.dat 
-w 
-q 
11.调用中断实现重启计算机（可以成文件） 
debug 
-a 
int 19 
int 20 
-rcx 
:2 
-n reset.com 
-w 
-q 
12）妙用debug命令挑选显示器 
C：\windows>debug 回车 
- f b800:0 f9f 20 70 满屏白光栅 
- f b800:0 f9f 20 70 满屏红光栅 
- f b800:0 f9f 20 20 满屏绿光栅 
- f b800:0 f9f 20 10 满屏蓝光栅 
- f b800:0 f9f c5 07 c4 07 满屏白色十字 
- f b800:0 f9f c5 04 c4 04 满屏红色十字 
- f b800:0 f9f c5 04 c4 02 满屏绿色十字 
- f b800:0 f9f c5 07 c4 01 满屏蓝色十字 
- f b800:0 f9f c5 07 c4 05 满屏紫色十字 
- f b800:0 f9f c4 07 满屏白色横线 
- f b800:0 f9f b3 07 20 07 满屏白色竖线 
- f b800:0 f9f 20 70 满屏黑色相间
回答者：qinghao1 - 魔法师 四级 3-7 23:26      对最佳答案的评论:
      评论字数200字以内 

 
 
  &copy;2008 Baidu

 